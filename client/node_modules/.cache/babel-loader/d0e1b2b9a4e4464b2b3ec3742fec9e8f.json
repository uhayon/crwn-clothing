{"ast":null,"code":"var _jsxFileName = \"/Users/uhayon/Desktop/Projects/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from './cart-dropdown.styles';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => React.createElement(CartDropdownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})) : React.createElement(EmptyMessageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    toggleCartHidden();\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/uhayon/Desktop/Projects/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdownContainer","CartItemsContainer","EmptyMessageContainer","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,qBAApD,QAAiF,wBAAjF;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBN,EAAAA;AAAtB,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIK,SAAS,CAACE,MAAV,GACEF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CADF,GAGE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALN,CADF,EAUE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAC3BH,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAX,IAAAA,gBAAgB;AACjB,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAoBA,MAAMY,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,gBAAgB,EAAE,MAAMc,QAAQ,CAACd,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeJ,UAAU,CACvBF,OAAO,CACLkB,eADK,EAELC,kBAFK,CAAP,CAGET,YAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\n\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from './cart-dropdown.styles';\n\nconst CartDropdown = ({ cartItems, history, toggleCartHidden }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {\n        cartItems.length ? (\n          cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n        ) : (\n          <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n        )\n      }\n    </CartItemsContainer>\n    <CustomButton onClick={() => {\n      history.push('/checkout');\n      toggleCartHidden();\n    }}>\n      GO TO CHECKOUT\n    </CustomButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps, \n    mapDispatchToProps\n  )(CartDropdown)\n);"]},"metadata":{},"sourceType":"module"}