{"ast":null,"code":"var _jsxFileName = \"/Users/uhayon/Desktop/Projects/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { onGoogleSignInStart } from '../../redux/user/user.sagas';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const onGoogleSignInStart = this.props.onGoogleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"I already have and account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: onGoogleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignInStart: () => dispatch(onGoogleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/uhayon/Desktop/Projects/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","onGoogleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from  '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { onGoogleSignInStart } from '../../redux/user/user.sagas';\n\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: '', password: '' })\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({ email: '', password: '' });\n  }\n\n  handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { onGoogleSignInStart } = this.props;\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have and account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput \n            type='email'\n            name='email'\n            value={this.state.email}\n            handleChange={this.handleChange}\n            label='email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'>Sign In</CustomButton>\n            <CustomButton type='button' onClick={onGoogleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignInStart: () => dispatch(onGoogleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}