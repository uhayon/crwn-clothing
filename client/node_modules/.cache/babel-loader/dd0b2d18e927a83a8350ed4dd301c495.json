{"ast":null,"code":"var _jsxFileName = \"/Users/uhayon/Desktop/Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/uhayon/Desktop/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;;AAGA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCC,uBADoC,GACV,IADU;AAAA;;AAGpCC,EAAAA,iBAAiB,GAAG;AAAA,UACVJ,iBADU,GACY,KAAKK,KADjB,CACVL,iBADU;AAElB,UAAMM,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAT,MAAAA,iBAAiB,CAACU,cAAD,CAAjB;AACD,KAHD;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKgB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAtBmC;;AAuBrC;;AAED,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,iBAAiB,EAAEU,cAAc,IAAIK,QAAQ,CAACf,iBAAiB,CAACU,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\n\nclass ShopPage extends React.Component{\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n    \n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}